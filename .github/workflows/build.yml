---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build Containers
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"
  workflow_dispatch:
    inputs:
      app:
        description: "App name to build"
        required: false
        type: string
        default: "renovate"

jobs:
  get-changed:
    name: Get changed apps
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.output.outputs.output }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Get changed files
        if: github.event_name == 'push'
        id: changed
        run: |
          CHANGED=$(git diff --name-only HEAD^ HEAD | grep -oP 'apps/\K([^/]+)(?=/.+)' | jq -c --raw-input --slurp 'split("\n") | map(select(. != "")) | { "apps": . }')
          echo "CHANGED=${CHANGED}" >> "$GITHUB_ENV"

      - name: Set default app
        if: github.event_name == 'workflow_dispatch'
        id: default
        run: |
          CHANGED=$(echo -n '{"apps": [ "${{ github.event.inputs.app }}" ]}' | jq -c)
          echo "CHANGED=${CHANGED}" >> "$GITHUB_ENV"

      - name: Output changed apps
        id: output
        env:
          CHANGED: ${{ env.CHANGED }}
        run: |
          echo "output=$CHANGED" >> "$GITHUB_OUTPUT"

  build-and-push:
    name: Build and push image
    runs-on: ubuntu-latest
    needs: get-changed
    if: needs.get-changed.outputs.changed != '{"apps":[]}'

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        app: ${{ fromJson(needs.get-changed.outputs.changed).apps }}

    steps:
      - name: Checkout ${{ matrix.app }}
        uses: actions/checkout@v5

      - name: Get ${{ matrix.app }} tag
        id: tag
        run: |
          TAG=$(grep -oP '^FROM .+${{ matrix.app }}:\K([^@$]+)' ./apps/${{ matrix.app }}/Containerfile | tail -1)
          echo "TAG=${TAG:-"latest"}" >> "$GITHUB_ENV"
          echo "::debug::TAG=$TAG"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@28fdb31ff34708d19615a74d67103ddc2ea9725c
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Lowercase Registry
        shell: bash
        run: echo "IMAGE=ghcr.io/${GITHUB_REPOSITORY_OWNER,,}/${{ matrix.app }}" >> "$GITHUB_ENV"

      - name: Build and Push ${{ matrix.app }}
        uses: docker/build-push-action@9e436ba9f2d7bcd1d038c8e55d039d37896ddc5d
        with:
          file: ./apps/${{ matrix.app }}/Containerfile
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ env.TAG }}
